{
  "name": "sonos-http-api",
  "version": "0.12.0",
  "description": "A simple node app for controlling a Sonos system with basic HTTP requests",
  "author": {
    "name": "Jimmy Shimizu",
    "email": "jimmy@shimizu.se"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jishi/node-sonos-http-api.git"
  },
  "dependencies": {
    "sonos-discovery": "git+https://github.com/jishi/node-sonos-discovery.git#master",
    "paperboy": "*"
  },
  "engine": "node 0.8.x",
  "main": "lib/sonos-http-api.js",
  "scripts": {
    "start": "node server.js"
  },
  "readme": "SONOS HTTP API\n==============\n\nA simple http based API for controlling your Sonos system. I try to follow compatibility versioning between this and sonos-discovery, which means that 0.3.x requires 0.3.x of sonos-discovery.\n\nUSAGE\n-----\n\nStart by fixing your dependencies. Invoke the following command:\n\n`npm install`\n\nThis will download the necessary dependencies if possible (you will need git for this)\n\nstart the server by running\n\n`node server.js`\n\nNow you can control your system by invoking the following commands:\n\n`http://localhost:5005/zones`\n`http://localhost:5005/lockvolumes`\n`http://localhost:5005/unlockvolumes`\n`http://localhost:5005/pauseall[/{timeout in minutes}]`\n`http://localhost:5005/resumeall[/{timeout in minutes}]`\n`http://localhost:5005/preset/{JSON preset}`\n`http://localhost:5005/preset/{predefined preset name}`\n`http://localhost:5005/{room name}/{action}[/{parameter}]`\n`http://localhost:5005/reindex`\n\nExample:\n\n`http://localhost:5005/living room/volume/15`\n(will set volume for room Living Room to 15%)\n\n`http://localhost:5005/living room/volume/+1`\n(will increase volume by 1%)\n\n`http://localhost:5005/living room/next`\n(will skip to the next track on living room, unless it's not a coordinator)\n\n`http://localhost:5005/living room/pause`\n(will pause the living room)\n\n`http://localhost:5005/living room/favorite/mysuperplaylist`\n(will replace queue with the favorite called \"mysuperplaylist\")\n\n`http://localhost:5005/living room/repeat/on`\n(will turn on repeat mode for group)\n\n\nThe actions supported as of today:\n\n* play\n* pause\n* playpause (toggles playing state)\n* volume (parameter is absolute or relative volume. Prefix +/- indicates relative volume)\n* groupVolume (parameter is absolute or relative volume. Prefix +/- indicates relative volume)\n* mute / unmute\n* groupMute / groupUnmute\n* seek (parameter is queue index)\n* trackseek (parameter is in seconds, 60 for 1:00, 120 for 2:00 etc)\n* next\n* previous\n* state (will return a json-representation of the current state of player)\n* favorite\n* playlist\n* lockvolumes / unlockvolumes (experimental, will enforce the volume that was selected when locking!)\n* repeat (on/off)\n* shuffle (on/off)\n* crossfade (on/off)\n* pauseall (with optional timeout in minutes)\n* resumeall (will resume the ones that was pause on the pauseall call. Useful for doorbell, phone calls, etc. Optional timeout)\n* say\n\nState\n-----\n\nExample of a state json:\n\n\t{\n\t  \"currentTrack\":{\n\t    \"artist\":\"College\",\n\t    \"title\":\"Teenage Color - Anoraak Remix\",\n\t    \"album\":\"Nightdrive With You\",\n\t    \"albumArtURI\":\"/getaa?s=1&u=x-sonos-spotify%3aspotify%253atrack%253a3DjBDQs8ebkxMBo2V8V3SH%3fsid%3d9%26flags%3d32\",\n\t    \"duration\":347,\n\t    \"uri\":\"x-sonos-spotify:spotify%3atrack%3a3DjBDQs8ebkxMBo2V8V3SH?sid=9&flags=32\"\n\t  },\n\t  \"nextTrack\":{\n\t    \"artist\":\"Blacknuss\",\n\t    \"title\":\"Thinking of You\",\n\t    \"album\":\"3\",\n\t    \"albumArtURI\":\"/getaa?s=1&u=x-sonos-spotify%3aspotify%253atrack%253a4U93TIa0X6jGQrTBGTkChH%3fsid%3d9%26flags%3d32\",\n\t    \"duration\":235,\n\t    \"uri\":\"x-sonos-spotify:spotify%3atrack%3a4U93TIa0X6jGQrTBGTkChH?sid=9&flags=32\"\n\t  },\n\t  \"volume\":18,\n\t  \"mute\":false,\n\t  \"trackNo\":161,\n\t  \"elapsedTime\":200,\n\t  \"elapsedTimeFormatted\":\"03:20\",\n\t  \"zoneState\":\"PAUSED_PLAYBACK\",\n\t  \"playerState\":\"PLAYING\",\n\t  \"zonePlayMode\":{\n\t    \"shuffle\":true,\n\t    \"repeat\":false,\n\t    \"crossfade\":false\n\t  }\n\t}\n\n\nPreset\n------\n\nA preset is a predefined grouping of players with predefined volumes, that will start playing whatever is in the coordinators queue.\n\nExample preset (state and uri are optional):\n\n\t{\n\t  \"players\": [\n\t    { \"roomName\": \"room1\", \"volume\": 15},\n\t    {\"roomName\": \"room2\", \"volume\": 25}\n\t  ],\n\t  \"state\": \"stopped\",\n\t  \"favorite\": \"my favorite name\",\n\t  \"uri\": \"x-rincon-stream:RINCON_0000000000001400\",\n\t  \"playMode\": \"SHUFFLE\"\n\t}\n\nThe first player listed in the example, \"room1\", will become the coordinator. It will loose it's queue when ungrouped but eventually that will be fixed in the future. Playmodes are the ones defined in UPnP, which are: NORMAL, REPEAT_ALL, SHUFFLE_NOREPEAT, SHUFFLE\nFavorite will have precedence over a uri. Playmode requires 0.4.2 of sonos-discovery to work.\n\npreset.json\n-----------\n\nYou can create a file with pre made presets, called presets.json. I've included a sample file based on my own setup. In the example, there is one preset called `all`, which you can apply by invoking:\n\n`http://localhost:5005/preset/all`\n\nsettings.json\n-------------\n\nIf you want to change port or the cache dir for tts files, you can create a settings.json file and put in the root folder. The defaults are:\n\n{\n  port: 5005,\n  cacheDir: './cache'\n}\n\nOverride as it suits you.\n\nFavorites\n---------\n\nIt now has support for starting favorites. Simply invoke:\n\n`http://localhost:5005/living room/favorite/[favorite name]`\n\nand it will replace the queue with that favorite. Bear in mind that favorites may share name, which might give unpredictable behavior at the moment.\n\nPlaylist\n---------\n\nPlaying a Sonos playlist is now supported. Invoke the following: \n\n`http://localhost:5005/living room/playlist/[playlist name]`\n\nand it will replace the queue with the playlist and starts playing.\n\n\nSay (TTS support)\n-----------------\n\nExperimental support for TTS. Action is:\n\n/[Room name]/say/[phrase][/[language_code]]\n\nExample:\n\n/Office/say/Hello, dinner is ready\n/Office/say/Hej, maten Ã¤r klar/sv\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jishi/node-sonos-http-api/issues"
  },
  "homepage": "https://github.com/jishi/node-sonos-http-api",
  "_id": "sonos-http-api@0.12.0",
  "_shasum": "78c23e5ba356b393a9a0c40ccec0d7d1a0cffb08",
  "_resolved": "https://github.com/jishi/node-sonos-http-api/archive/0.12.0.tar.gz",
  "_from": "https://github.com/jishi/node-sonos-http-api/archive/0.12.0.tar.gz"
}
