{
  "_args": [
    [
      "sonos-http-api@file:lib/node-sonos-http-api",
      "/Users/don/src/alexa-at-home"
    ]
  ],
  "_from": "lib/node-sonos-http-api",
  "_id": "sonos-http-api@0.17.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/sonos-http-api",
  "_phantomChildren": {
    "colors": "1.1.2",
    "mime": "1.3.4",
    "optimist": "0.6.1"
  },
  "_requested": {
    "name": "sonos-http-api",
    "raw": "sonos-http-api@file:lib/node-sonos-http-api",
    "rawSpec": "file:lib/node-sonos-http-api",
    "scope": null,
    "spec": "/Users/don/src/alexa-at-home/lib/node-sonos-http-api",
    "type": "directory"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "file:lib/node-sonos-http-api",
  "_shasum": "4e88a35a4404d1811c132cb4ec89e5a2bd11258d",
  "_shrinkwrap": null,
  "_spec": "sonos-http-api@file:lib/node-sonos-http-api",
  "_where": "/Users/don/src/alexa-at-home",
  "author": {
    "email": "jimmy@shimizu.se",
    "name": "Jimmy Shimizu"
  },
  "bugs": {
    "url": "https://github.com/jishi/node-sonos-http-api/issues"
  },
  "dependencies": {
    "async": "^1.5.0",
    "node-static": "0.7.x",
    "request-promise": "^1.0.2",
    "require-fu": "1.0.x",
    "sonos-discovery": "https://github.com/jishi/node-sonos-discovery/archive/0.16.1.tar.gz"
  },
  "description": "A simple node app for controlling a Sonos system with basic HTTP requests",
  "devDependencies": {},
  "engine": "node 4.x.x",
  "homepage": "https://github.com/jishi/node-sonos-http-api#readme",
  "main": "lib/sonos-http-api.js",
  "name": "sonos-http-api",
  "optionalDependencies": {},
  "readme": "[![PayPal donate button](https://img.shields.io/badge/paypal-donate-yellow.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=jimmy%2eshimizu%40gmail%2ecom&lc=SE&item_name=Support%20open%20source%20initiative&currency_code=EUR&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted \"Donate once-off to this project using Paypal\")\n\nFeel free to use it as you please. Consider donating if you want to support further development.\n\nSONOS HTTP API\n==============\n\nA simple http based API for controlling your Sonos system. I try to follow compatibility versioning between this and sonos-discovery, which means that 0.3.x requires 0.3.x of sonos-discovery.\n\nThere is a simple sandbox at /docs (incomplete atm)\n\nUSAGE\n-----\n\nStart by fixing your dependencies. Invoke the following command:\n\n`npm install --production`\n\nThis will download the necessary dependencies if possible (you will need git for this)\n\nstart the server by running\n\n`npm start`\n\nNow you can control your system by invoking the following commands:\n\n\thttp://localhost:5005/zones\n\thttp://localhost:5005/lockvolumes\n\thttp://localhost:5005/unlockvolumes\n\thttp://localhost:5005/pauseall[/{timeout in minutes}]\n\thttp://localhost:5005/resumeall[/{timeout in minutes}]\n\thttp://localhost:5005/preset/{JSON preset}\n\thttp://localhost:5005/preset/{predefined preset name}\n\thttp://localhost:5005/{room name}/{action}[/{parameter}]\n\thttp://localhost:5005/reindex\n\thttp://localhost:5005/sleep/{timeout in seconds or timestamp HH:MM:SS or off}\n\nExample:\n\n`http://localhost:5005/living room/volume/15`\n(will set volume for room Living Room to 15%)\n\n`http://localhost:5005/living room/volume/+1`\n(will increase volume by 1%)\n\n`http://localhost:5005/living room/next`\n(will skip to the next track on living room, unless it's not a coordinator)\n\n`http://localhost:5005/living room/pause`\n(will pause the living room)\n\n`http://localhost:5005/living room/favorite/mysuperplaylist`\n(will replace queue with the favorite called \"mysuperplaylist\")\n\n`http://localhost:5005/living room/repeat/on`\n(will turn on repeat mode for group)\n\n\nThe actions supported as of today:\n\n* play\n* pause\n* playpause (toggles playing state)\n* volume (parameter is absolute or relative volume. Prefix +/- indicates relative volume)\n* groupVolume (parameter is absolute or relative volume. Prefix +/- indicates relative volume)\n* mute / unmute\n* groupMute / groupUnmute\n* seek (parameter is queue index)\n* trackseek (parameter is in seconds, 60 for 1:00, 120 for 2:00 etc)\n* next\n* previous\n* state (will return a json-representation of the current state of player)\n* favorite\n* playlist\n* lockvolumes / unlockvolumes (experimental, will enforce the volume that was selected when locking!)\n* repeat (on/off)\n* shuffle (on/off)\n* crossfade (on/off)\n* pauseall (with optional timeout in minutes)\n* resumeall (will resume the ones that was pause on the pauseall call. Useful for doorbell, phone calls, etc. Optional timeout)\n* say\n* clearqueue\n\n\nState\n-----\n\nExample of a state json:\n\n\t{\n\t  \"currentTrack\":{\n\t    \"artist\":\"College\",\n\t    \"title\":\"Teenage Color - Anoraak Remix\",\n\t    \"album\":\"Nightdrive With You\",\n\t    \"albumArtURI\":\"/getaa?s=1&u=x-sonos-spotify%3aspotify%253atrack%253a3DjBDQs8ebkxMBo2V8V3SH%3fsid%3d9%26flags%3d32\",\n\t    \"duration\":347,\n\t    \"uri\":\"x-sonos-spotify:spotify%3atrack%3a3DjBDQs8ebkxMBo2V8V3SH?sid=9&flags=32\"\n\t  },\n\t  \"nextTrack\":{\n\t    \"artist\":\"Blacknuss\",\n\t    \"title\":\"Thinking of You\",\n\t    \"album\":\"3\",\n\t    \"albumArtURI\":\"/getaa?s=1&u=x-sonos-spotify%3aspotify%253atrack%253a4U93TIa0X6jGQrTBGTkChH%3fsid%3d9%26flags%3d32\",\n\t    \"duration\":235,\n\t    \"uri\":\"x-sonos-spotify:spotify%3atrack%3a4U93TIa0X6jGQrTBGTkChH?sid=9&flags=32\"\n\t  },\n\t  \"volume\":18,\n\t  \"mute\":false,\n\t  \"trackNo\":161,\n\t  \"elapsedTime\":200,\n\t  \"elapsedTimeFormatted\":\"03:20\",\n\t  \"zoneState\":\"PAUSED_PLAYBACK\",\n\t  \"playerState\":\"PLAYING\",\n\t  \"zonePlayMode\":{\n\t    \"shuffle\":true,\n\t    \"repeat\":false,\n\t    \"crossfade\":false\n\t  }\n\t}\n\n\nPreset\n------\n\nA preset is a predefined grouping of players with predefined volumes, that will start playing whatever is in the coordinators queue.\n\nExample preset (state and uri are optional):\n\n\t{\n\t  \"players\": [\n\t    { \"roomName\": \"room1\", \"volume\": 15},\n\t    {\"roomName\": \"room2\", \"volume\": 25}\n\t  ],\n\t  \"state\": \"stopped\",\n\t  \"favorite\": \"my favorite name\",\n\t  \"uri\": \"x-rincon-stream:RINCON_0000000000001400\",\n\t  \"playMode\": \"SHUFFLE\",\n\t  \"pauseOthers\": true\n\t  \"sleep\": \"01:00:00\"\n\t}\n\nThe first player listed in the example, \"room1\", will become the coordinator. It will loose it's queue when ungrouped but eventually that will be fixed in the future. Playmodes are the ones defined in UPnP, which are: NORMAL, REPEAT_ALL, SHUFFLE_NOREPEAT, SHUFFLE\nFavorite will have precedence over a uri. Playmode requires 0.4.2 of sonos-discovery to work.\npauseOthers will pause all zones before applying the preset, effectively muting your system.  sleep is an optional value that enables the sleep timer and supports the 'HH:MM:SS' format.\n\npreset.json\n-----------\n\nYou can create a file with pre made presets, called presets.json. I've included a sample file based on my own setup. In the example, there is one preset called `all`, which you can apply by invoking:\n\n`http://localhost:5005/preset/all`\n\nsettings.json\n-------------\n\nIf you want to change port or the cache dir for tts files, you can create a settings.json file and put in the root folder.\n\nThe defaults are:\n\n\t{\n\t  port: 5005,\n\t  cacheDir: './cache'\n\t}\n\nOverride as it suits you.\n\nFavorites\n---------\n\nIt now has support for starting favorites. Simply invoke:\n\n`http://localhost:5005/living room/favorite/[favorite name]`\n\nand it will replace the queue with that favorite. Bear in mind that favorites may share name, which might give unpredictable behavior at the moment.\n\nPlaylist\n---------\n\nPlaying a Sonos playlist is now supported. Invoke the following:\n\n`http://localhost:5005/living room/playlist/[playlist name]`\n\nand it will replace the queue with the playlist and starts playing.\n\n\nSay (TTS support)\n-----------------\n\nExperimental support for TTS. Action is:\n\n\t/[Room name]/say/[phrase][/[language_code]]\n\t/sayall/[phrase][/[language_code]]\n\nExample:\n\n\t/Office/say/Hello, dinner is ready\n\t/Office/say/Hej, maten Ã¤r klar/sv\n\t/sayall/Hello, dinner is ready\n\nSayall will group all players, set 20% volume and then try and restore everything as the way it where. Please try it out, it will probably contain glitches but please report detailed descriptions on what the problem is (starting state, error that occurs, and the final state of your system).\n\nDocker\n-------\n\nA docker file is included, make sure that if you use this that you start up your container with \"--net=host\" example:\n\n```\ndocker run --net=host --restart=always -d <your container/image name>\n```\n\nThe restart always is to keep it running after a reboot and to keep it alive it if crashes.\nMore information for docker https://docs.docker.com\n\nWebhook\n-------\n\nNOTE! This is experimental and might change in the future! Please leave your feedback as github issues if you feel like it doesn't suit your need, since I don't know what kind of restrictions you will be facing.\n\nSince 0.17.x there is now support for a web hook. If you add a setting in settings.json like this:\n\n```\n{\n  \"webhook\": \"http://localhost:5006/\"\n}\n```\n\nEvery state change and topology change will be posted (method POST) to that URL, as JSON. The following data structure will be sent:\n\n```\n{\n  \"type\": \"transport-state\",\n  \"data\": { (snapshot of player) }\n}\n```\n\nor\n\n```\n{\n  \"type\": \"topology-change\",\n  \"data\": { (snapshot of zones) }\n}\n```\n\n\"data\" property will be equal to the same data as you would get from /RoomName/state or /zones. There is an example endpoint in the root if this project called test_endpoint.js which you may fire up to get an understanding of what is posted, just invoke it with \"node test_endpoint.js\" in a terminal, and then start the http-api in another terminal.\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jishi/node-sonos-http-api.git"
  },
  "scripts": {
    "start": "node server.js"
  },
  "version": "0.17.0"
}
