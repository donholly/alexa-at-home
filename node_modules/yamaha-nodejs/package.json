{
  "name": "yamaha-nodejs",
  "version": "0.4.2",
  "description": "An API to control your YAMAHA Receiver written in nodejs",
  "main": "yamaha.js",
  "dependencies": {
    "deferred": "~0.7.1",
    "request": "~2.40.0",
    "xml2js": "~0.4.4",
    "async": "~0.9.0"
  },
  "devDependencies": {
    "chai": "~1.9.1"
  },
  "scripts": {
    "test": "mocha mochatest"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/PSeitz/yamaha-nodejs.git"
  },
  "keywords": [
    "yamaha",
    "api",
    "nodejs",
    "node",
    "receiver",
    "network"
  ],
  "author": {
    "name": "Pascal Seitz"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/PSeitz/Yamaha-Network-API/issues"
  },
  "homepage": "https://github.com/PSeitz/Yamaha-Network-API",
  "gitHead": "acfafcfea18297218ac11e7a43565d44f1f061a4",
  "readme": "Yamaha-nodejs\n==================\n\nA node module to control your yamaha receiver. Tested with RX-V775, should work with all yamaha receivers with a network interface.\n\n### Install\nnpm install yamaha-nodejs\n\n## Example\n```javascript\nvar YamahaAPI = require(\"yamaha-nodejs\");\nvar yamaha = new YamahaAPI(\"192.168.0.100\");\nyamaha.powerOn().done(function(){\n\tconsole.log(\"powerOn\");\n\tyamaha.setMainInputTo(\"NET RADIO\").done( function(){\n\t\tconsole.log(\"Switched to Net Radio\");\n\t\tyamaha.selectWebRadioListItem(1).done(function(){\n\t\t\tconsole.log(\"Selected Favorites\");\n\t\t\tyamaha.selectWebRadioListItem(1).done(function(){});\n\t\t});\n\n\t});\n});\n```\n## Prerequisites\n* To power on the yamaha, network standby has to be enabled\n* The Yamaha reveiver is stateful. Some commands only work work if the receiver is in the right state. E.g. to get web radio channels, the \"NET RADIO\" input has to be selected.\n\n## Methods\n```javascript\nvar yamaha = new Yamaha(\"192.168.0.100\")\nyamaha.powerOff()\nyamaha.powerOn()\nyamaha.isOn()\nyamaha.isOff()\n\n//Volume\nyamaha.setVolumeTo(-500)\nyamaha.volumeUp(50)\nyamaha.volumeDown(50)\n\n//Switch Input\nyamaha.setMainInputTo(\"NET RADIO\")\n\n//Basic\nyamaha.SendXMLToReceiver()\n\n//Get Info\nyamaha.getBasicInfo().done(function(basicInfo){\n    basicInfo.getVolume();\n    basicInfo.isMuted();\n    basicInfo.isOn();\n    basicInfo.isOff();\n    basicInfo.getCurrentInput();\n    basicInfo.isPartyModeEnabled();\n    basicInfo.isPureDirectEnabled();\n})\n    \n\nyamaha.getSystemConfig()\nyamaha.getAvailableInputs()\nyamaha.isMenuReady(\"NET_RADIO\")\n\n// Single Commands, receiver has to be in the right state\nyamaha.getWebRadioChannels()\nyamaha.setWebRadioToChannel()\n\n// Chained Commands, they ensure the receiver is in the right state\nyamaha.switchToFavoriteNumber() \n    \n    \n```\n#### Deferreds\nAll these methods return a promise:\n```javascript\nyamaha.isOn().done(function(result){\n\tconsole.log(\"Receiver is:\"+result);\n})\n```\n#### Execute Tests\n```javascript\nmocha mochatest.js --ip 192.168.0.25\n```\n",
  "readmeFilename": "README.md",
  "_id": "yamaha-nodejs@0.4.2",
  "_shasum": "55285457f3abe09a30dceba2c2ce158b471cbd9a",
  "_from": "git://github.com/PSeitz/yamaha-nodejs.git",
  "_resolved": "git://github.com/PSeitz/yamaha-nodejs.git#acfafcfea18297218ac11e7a43565d44f1f061a4",
  "_fromGithub": true
}
