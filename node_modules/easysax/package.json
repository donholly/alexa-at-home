{
  "_args": [
    [
      "easysax@0.1.x",
      "/Users/don/src/alexa-at-home/node_modules/sonos-discovery"
    ]
  ],
  "_from": "easysax@>=0.1.0 <0.2.0",
  "_id": "easysax@0.1.14",
  "_inCache": true,
  "_installable": true,
  "_location": "/easysax",
  "_npmUser": {
    "email": "flash.vkv@gmail.com",
    "name": "vflash"
  },
  "_npmVersion": "1.2.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "easysax",
    "raw": "easysax@0.1.x",
    "rawSpec": "0.1.x",
    "scope": null,
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sonos-discovery"
  ],
  "_resolved": "https://registry.npmjs.org/easysax/-/easysax-0.1.14.tgz",
  "_shasum": "54ede287ca2506d9840ddc92cdce811930179639",
  "_shrinkwrap": null,
  "_spec": "easysax@0.1.x",
  "_where": "/Users/don/src/alexa-at-home/node_modules/sonos-discovery",
  "author": {
    "email": "flash.vkv@gmail.com",
    "name": "Vopilovskiy Konstantin",
    "url": "http://vflash.ru"
  },
  "bugs": {
    "url": "https://github.com/vflash/easysax/issues"
  },
  "dependencies": {},
  "description": "pure javascript xml parser",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "54ede287ca2506d9840ddc92cdce811930179639",
    "tarball": "http://registry.npmjs.org/easysax/-/easysax-0.1.14.tgz"
  },
  "files": [
    "LICENSE",
    "README.md",
    "easysax.js"
  ],
  "homepage": "https://github.com/vflash/easysax#readme",
  "keywords": [
    "parser",
    "pure",
    "sax",
    "xml"
  ],
  "main": "./easysax.js",
  "maintainers": [
    {
      "name": "vflash",
      "email": "flash.vkv@gmail.com"
    }
  ],
  "name": "easysax",
  "optionalDependencies": {},
  "readme": "EASYSAX - pure javascript sax-style parser for xml\r\n==================================================\r\nПростой и быстрый SAX парсер XML файлов.\r\nРеализован по принципу парсить только то что нужно и как можно быстрее.\r\nПарсер не потоковый, и не расчитан на гиганские файлы. Весь XML должен быть в памяти.\r\nВстроенный уникальный механизм работы с пространсвами имен.\r\n\r\n\r\nПарсер был написан для RSS ридера http://zzreader.com\r\nНа конец 2012 года остается самым быстрым SAX парсером под NODE.JS\r\n\r\n\r\n\r\nBENCHMARK\r\n---------------------------------------------------\r\n\r\n**benchmark/test.js, parse file #1**\r\n```\r\nsax-js: 12671ms\r\nlibxmljs: 11311ms\r\nexpat: 6118ms\r\nexpat buffer: 5278ms\r\neasysax : 1739ms  //  namespace--on, attr()--on , entity_decode--on\r\neasysax: 1035ms   //  namespace--off, attr()--on , entity_decode--on\r\neasysax: 740ms    //  namespace--off, attr()--off , entity_decode--off\r\n```\r\n\r\n\r\n**benchmark/test.js, parse file #2 (много атрибутов)**\r\n```\r\nsax-js: 84060ms\r\nlibxmljs: 48919ms\r\nexpat: 39444ms\r\nexpat buffer: 35375ms\r\neasysax: 14655ms  //  namespace--on, attr()--on , entity_decode--on\r\neasysax: 9874ms   //  namespace--off, attr()--on , entity_decode--on\r\neasysax: 3531ms   //  namespace--off, attr()--off , entity_decode--on\r\neasysax: 2954ms   //  namespace--off, attr()--off , entity_decode--off\r\n```\r\n\r\n\r\n**demo/example.js, parse file #2**\r\n```\r\n1,000 pages for: 13335ms -  attr()--all\r\n1,000 pages for: 7300ms  -  attr()--on_request\r\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vflash/easysax.git"
  },
  "scripts": {},
  "version": "0.1.14"
}
